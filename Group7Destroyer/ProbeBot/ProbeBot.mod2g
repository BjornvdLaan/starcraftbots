use ProbeBot as knowledge.
use "../GenericMods/GenericPredicates" as knowledge.
use ProbeBot as actionspec.

module ProbeBot {
	
	if a-goal(unitAmount("Protoss Pylon", 1)), bel(constructLoc(X,Y,_), minerals(M), M>100) then build("Protoss Pylon", X, Y).
		
	if a-goal(unitAmount("Protoss Cybernetics Core", 1)), bel(unitAmount("Protoss Gateway", GateAmount), GateAmount = 2, constructLoc(X,Y,true), minerals(M), M>200) then build("Protoss Cybernetics Core", X, Y).
	
	if a-goal(unitAmount("Protoss Gateway", 1)), bel(constructLoc(X,Y,true), minerals(M), M > 150) then build("Protoss Gateway", X, Y).
	
	if a-goal(unitAmount("Protoss Gateway", 2)), bel(constructLoc(X,Y,true), minerals(M), M > 150) then build("Protoss Gateway", X, Y).
	
	if a-goal(unitAmount("Protoss Pylon", PylAmount)), bel(constructLoc(X,Y,_), minerals(M), M>100) then build("Protoss Pylon", X, Y).
	
	if a-goal(unitAmount("Protoss Assimilator", 1)), bel(vespeneLoc(Id,R,Rg,Xv,Yv), minerals(M), M >= 100, unitAmount("Protoss Gateway", GateAmount), GateAmount > 1) then build("Protoss Assimilator", Xv, Yv).
	
	%if a-goal(unitAmount("Protoss Stargate", 1)), bel(constructLoc(X,Y,true), minerals(M), M > 150, gas(G), G >= 150) then build("Protoss Stargate", X, Y).
	
	%if a-goal(unitAmount("Protoss Shield Battery", 1)), bel(constructLoc(X,Y,true), minerals(M), M > 100) then build("Protoss Shield Battery", X, Y).
	
	if a-goal(workerActivity(Id, gatheringGas)), bel(friendly("Protoss Assimilator", AssiId, _, _)) then gather(AssiId).
	
	if a-goal(workerActivity(Id, gatheringMinerals)), bel(mineralLoc(MinId,_,_,_)) then gather(MinId).
	
}